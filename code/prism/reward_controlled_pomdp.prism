pomdp

observables
	o
endobservables

const int T = 10;

module model
	t : [1 .. T]	 init 1;
	n : [0 .. 1]	 init 0;
	s : [0 .. 2]	 init 0;
	o : [0 .. 2]	 init 0;


	[action1] (o = 0) & (s = 0) & (n = 1) & (t < T-1) -> 0.5:(n' = 0) & (t' = t + 1) + 0.5:(s' = 1) & (n' = 0) & (o' = 1) & (t' = t + 1);
	[action1] (o = 0) & (s = 0) & (n = 1) & (t = T-1) -> 0.5:(n' = 0) & (o' = 2) & (t' = t + 1) + 0.5:(s' = 1) & (n' = 0) & (o' = 2) & (t' = t + 1);
	[action1] (o = 0) & (s = 2) & (n = 1) & (t < T-1) -> 0.25:(n' = 0) & (t' = t + 1) + 0.75:(s' = 1) & (n' = 0) & (o' = 1) & (t' = t + 1);
	[action1] (o = 0) & (s = 2) & (n = 1) & (t = T-1) -> 0.25:(n' = 0) & (o' = 2) & (t' = t + 1) + 0.75:(s' = 1) & (n' = 0) & (o' = 2) & (t' = t + 1);
	[action1] (o = 0) & (s = 0) & (n = 0) & (t < T-1) -> 0.5:(n' = 1) & (t' = t + 1) + 0.5:(s' = 1) & (n' = 1) & (o' = 1) & (t' = t + 1);
	[action1] (o = 0) & (s = 0) & (n = 0) & (t = T-1) -> 0.5:(n' = 1) & (o' = 2) & (t' = t + 1) + 0.5:(s' = 1) & (n' = 1) & (o' = 2) & (t' = t + 1);
	[action1] (o = 0) & (s = 2) & (n = 0) & (t < T-1) -> 0.25:(n' = 1) & (t' = t + 1) + 0.75:(s' = 1) & (n' = 1) & (o' = 1) & (t' = t + 1);
	[action1] (o = 0) & (s = 2) & (n = 0) & (t = T-1) -> 0.25:(n' = 1) & (o' = 2) & (t' = t + 1) + 0.75:(s' = 1) & (n' = 1) & (o' = 2) & (t' = t + 1);

	[action2] (o = 0) & (s = 0) & (n = 1) & (t < T-1) -> 0.25:(s' = 2) & (n' = 0) & (t' = t + 1) + 0.75:(s' = 1) & (n' = 0) & (o' = 1) & (t' = t + 1);
	[action2] (o = 0) & (s = 0) & (n = 1) & (t = T-1) -> 0.25:(s' = 2) & (n' = 0) & (o' = 2) & (t' = t + 1) + 0.75:(s' = 1) & (n' = 0) & (o' = 2) & (t' = t + 1);
	[action2] (o = 0) & (s = 2) & (n = 1) & (t < T-1) -> 0.75:(s' = 0) & (n' = 0) & (t' = t + 1) + 0.25:(n' = 0) & (t' = t + 1);
	[action2] (o = 0) & (s = 2) & (n = 1) & (t = T-1) -> 0.75:(s' = 0) & (n' = 0) & (o' = 2) & (t' = t + 1) + 0.25:(n' = 0) & (o' = 2) & (t' = t + 1);
	[action2] (o = 0) & (s = 0) & (n = 0) & (t < T-1) -> 0.25:(s' = 2) & (n' = 1) & (t' = t + 1) + 0.75:(s' = 1) & (n' = 1) & (o' = 1) & (t' = t + 1);
	[action2] (o = 0) & (s = 0) & (n = 0) & (t = T-1) -> 0.25:(s' = 2) & (n' = 1) & (o' = 2) & (t' = t + 1) + 0.75:(s' = 1) & (n' = 1) & (o' = 2) & (t' = t + 1);
	[action2] (o = 0) & (s = 2) & (n = 0) & (t < T-1) -> 0.75:(s' = 0) & (n' = 1) & (t' = t + 1) + 0.25:(n' = 1) & (t' = t + 1);
	[action2] (o = 0) & (s = 2) & (n = 0) & (t = T-1) -> 0.75:(s' = 0) & (n' = 1) & (o' = 2) & (t' = t + 1) + 0.25:(n' = 1) & (o' = 2) & (t' = t + 1);

	[action3] (o = 1) & (s = 1) & (n = 1) & (t < T-1) -> 0.1:(s' = 2) & (o' = 0) & (t' = t + 1) + 0.9:(t' = t + 1);
	[action3] (o = 1) & (s = 1) & (n = 1) & (t = T-1) -> 0.1:(s' = 2) & (o' = 2) & (t' = t + 1) + 0.9:(o' = 2) & (t' = t + 1);
	[action3] (o = 1) & (s = 1) & (n = 0) & (t < T-1) -> 0.1:(s' = 2) & (o' = 0) & (t' = t + 1) + 0.9:(t' = t + 1);
	[action3] (o = 1) & (s = 1) & (n = 0) & (t = T-1) -> 0.1:(s' = 2) & (o' = 2) & (t' = t + 1) + 0.9:(o' = 2) & (t' = t + 1);

	[end] true -> 1:(o' = 2);

	[final] (o = 2) -> 1:true;

endmodule

label "end" = o=2;

rewards "profit"
	[end]	 (n = 1): 10;
	[final]	 true:0;
	[action1]	 true:	 0;
	[action2]	 true:	 0;
	[action3]	 true:	 0;
endrewards