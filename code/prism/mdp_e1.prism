mdp

const double a00 = 0.5;
const double a02 = 0.5;
const double b01 = 0.25;
const double b02 = 0.75;
const double a11 = 0.25;
const double a12 = 0.75;
const double b11 = 0.25;
const double b10 = 0.75;
const double c21 = 0.1;
const double c22 = 0.9;

const int N = 2;
const int T = 1000;


module maintenance
	n : [0 .. N-1] 	init 1;
    s : [0 .. 2] 		init 0;
	e : bool 			init false; //end 
	
	
	[] (e=true) -> true;
	
	[a] (s=0) & (e=false) -> a00:(n'=mod(n+1,N)) + a02:(s'=2);
	[b] (s=0) & (e=false) -> b01:(n'=mod(n+1,N))&(s'=1) + b02:(s'=2);
	
	[a] (s=1) & (e=false) -> a11:(n'=mod(n+1,N)) + a12:(s'=2);
	[b] (s=1) & (e=false) -> b11:(n'=mod(n+1,N)) + b10:(n'=mod(n+1,N));
	
	[c] (s=2) & (e=false)-> c21:(s'=1) + c22:true;
	
	[end] (e=false) -> 1:(e'=true);
endmodule

formula r = 15;
label "end" = e=true;

rewards "profit"
	[end]  	(n=0): 	r; 
	[a] 		true: 	0;
	[b] 		true: 	0;
	[c] 		true: 	0;
endrewards

rewards "steps"
	[end]    true: 1;
	[a]         true: 1;
	[b]         true: 1;
	[c]         true:1;
	[]           true:0;
endrewards

